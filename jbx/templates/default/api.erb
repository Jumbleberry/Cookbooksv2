map $branch $api_dist_path {
    ~*([^.]+)\.([^.]+)$ /dist/$2/$1/public;
    ~*([^.]+)$          /dist/$1/public;
    default             /public;
}

server {
    listen      80;
    server_name <%= @hostname %>
                ~^(?<branch>.+)\.<%= @hostname %>;
    root        <%= @path %>;
    
    set         $upstream <%= @app %>;

    # Show server host name as header
    add_header  X-Backend-Server $hostname;
    
    <% ssl = File.file?("/etc/nginx/ssl/#{@app}.key") %>
    <% if (ssl) %>
    listen      443 ssl;
    
    # Redirect non ELB traffic to https
    if ($real_scheme != "https") {
        return 301 https://$server_name$request_uri;
    }
    
    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES128-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA128:DHE-RSA-AES128-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA128:ECDHE-RSA-AES128-SHA384:ECDHE-RSA-AES128-SHA128:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA384:AES128-GCM-SHA128:AES128-SHA128:AES128-SHA128:AES128-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_ecdh_curve              secp384r1;
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         10m;
    ssl_session_tickets         off;
    ssl_stapling                on;
    ssl_stapling_verify         on;
    ssl_dhparam                 /etc/nginx/dhparams.pem;
    
    ssl_certificate             /etc/nginx/ssl/<%= @app %>.pem;
    ssl_certificate_key         /etc/nginx/ssl/<%= @app %>.key;
    
    <% end %>
    
    if ($http_host = "www.<%= @hostname %>") {
        return 301 $real_scheme://<%= @hostname %>$request_uri;
    }
    
    index       index.php;
    try_files   $api_dist_path/$uri $api_dist_path/$uri/ /index.php?_url=$uri&$args;
    
    location    = /robots.txt  { access_log off; log_not_found off; try_files $uri =404; }
    location    = /favicon.ico { access_log off; log_not_found off; try_files $uri =404; }	
    
    access_log  /var/log/nginx/<%= @hostname %>.access.log main buffer=64k flush=60s if=$loggable;
    error_log   /var/log/nginx/<%= @hostname %>.error.log warn;

    location ~ \.php$ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Api-Token,X-Client,X-Database,Jbx-Db,ETag';
            add_header 'Access-Control-Max-Age' 259200;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
        
            return      204;
        }
        
        try_files                       $api_dist_path/index.php =404;
        fastcgi_pass                    unix:<%= node["php"]["fpm"]["listen"] %>;
        fastcgi_index                   index.php;
        fastcgi_split_path_info         ^(.+\.php)(/.+)$;
        fastcgi_param PATH_INFO         $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED   $document_root$fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        include                         fastcgi_params;
    }
}